datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  fingerprint String
  userAgent   String?
  ip          String
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  userId      String   @db.ObjectId
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  password String
  card     Card?
  sessions Session[]
  images   Image[]
}

enum ImageKind {
  ProfilePicture
  Background
}

model Image {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  kind     ImageKind
  mimetype String
  filename String    @unique
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @db.ObjectId
}

enum AvatarSize {
  sm
  md
  lg
}

type SocialNetwork {
  id      String
  type    String
  value   String
  enabled Boolean
}

type CardData {
  avatarSize     AvatarSize      @default(md)
  avatarFilename String?
  name           String          @default("")
  description    String          @default("")
  socialNetworks SocialNetwork[]
  background     String?
}

model Card {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  username    String    @unique
  publicData  CardData
  draftData   CardData
  updatedAt   DateTime  @updatedAt
  publishedAt DateTime?
  isPublished Boolean   @default(false)
  userId      String    @unique @db.ObjectId
}
